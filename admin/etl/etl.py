import csv
import psycopg2
import dotenv
import os
import pandas as pd

dotenv.load_dotenv()  # Load environment variables from .env file

dsn = {
    'dbname': os.getenv('POSTGRES_NAME'),
    'user': os.getenv('POSTGRES_USER'),
    'password': os.getenv('POSTGRES_PASSWORD'),
    'host': os.getenv('POSTGRES_HOST'),
    'port': os.getenv('POSTGRES_PORT'),
}

# Read data from CSV file
csv_file_path = '8222_only.csv'
df = pd.read_csv(csv_file_path, delimiter=';', encoding='utf-8')

# Rename columns to match your database schema
column_mapping = {
    'Наименование': 'name',
    'Описание': 'description',
    'Город': 'city',
    'Телефон 1': 'phone_1',
    'Телефон 2': 'phone_2',
    'Телефон 3': 'phone_3',
    'Telegram 1': 'telegram_1',
    'Telegram 2': 'telegram_2',
    'Telegram 3': 'telegram_3'
}
df = df.rename(columns=column_mapping)

conn = psycopg2.connect(**dsn)
cur = conn.cursor()

create_table_query = """
CREATE TABLE IF NOT EXISTS "contacts" (
    "id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" varchar(128) NOT NULL,
    "description" text NULL,
    "city" varchar(32) NOT NULL,
    "phone_1" varchar(16) NULL,
    "phone_2" varchar(16) NULL,
    "phone_3" varchar(16) NULL,
    "telegram_1" varchar(64) NULL,
    "telegram_2" varchar(64) NULL,
    "telegram_3" varchar(64) NULL,
    "rating" integer NULL
);
"""
cur.execute(create_table_query)
conn.commit()

# Insert data from DataFrame into PostgreSQL table
insert_query = """
INSERT INTO contacts (name, description, city, phone_1, phone_2, phone_3, telegram_1, telegram_2, telegram_3, rating)
VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
"""

for index, row in df.iterrows():
    cur.execute(insert_query, (
        row['name'],
        row['description'],
        row['city'],
        row['phone_1'],
        row['phone_2'],
        row['phone_3'],
        row['telegram_1'],
        row['telegram_2'],
        row['telegram_3'],
        None  # Always set rating to None
    ))

conn.commit()

# Close cursor and connection
cur.close()
conn.close()

print("Data insertion completed successfully.")